All in one Windows installer
============================

When working on Windows, the easiest way to get up and running is through
the `Conceptive Python SDK <http://www.conceptive.be/python-sdk.html>`_.

.. image:: ../_static/cpd_installer.png

This SDK is a Python distribution targeted at the development and deployment of Qt
based applications.  This all in one installation of Camelot with all its
dependencies is available in the `shop <http://www.conceptive.be/shop.html>`_.

From the Python Package Index
=============================

First, make sure you have setup tools installed, `Setup tools <http://pypi.python.org/pypi/setuptools>`_.
If you are using a debian based distribution, you can type::

  sudo apt-get install python-setuptools

Then use easy_install to install Camelot, under Linux this would be done by typing::

  sudo easy_install camelot

Packages
========

Linux distributions often offer packages for various applications, including
Camelot and its dependencies :

 * `OpenSUSE build service  <https://build.opensuse.org/project/show?project=home%3Afrispete%3APyQt>`_.

From source
===========

When installing Camelot from source, you need to make sure all dependencies
are installed and available in your **PYTHONPATH**.
 
**Dependencies**

In addition to PyQt 4.8 and Qt 4.8, Camelot needs these libraries :

.. include:: /../../../requirements.txt
                        
**Releases**

The source code of a release can be downloaded from the 
`Python Package Index <http://pypi.python.org/pypi/Camelot/>`_ and then
extracted::

  tar xzvf Camelot-10.07.02.tar.gz

**Repository**

The latest and greatest version of the source can be checked out
from the Bitbucket repository::

  hg clone https://bitbucket.org/conceptive/camelot
  
**Adapting PYTHONPATH**

You need to make sure Camelot and all its dependencies are in the **PYTHONPATH**
before you start using it.

Verifiy the installation
========================

To verify if you have Camelot installed and available in the **PYTHONPATH**, fire up a
python interpreter::

  python
  
and issue these commands::

  >>> import camelot
  >>> print camelot.__version__
  >>> import sqlalchemy
  >>> print sqlalchemy.__version__
  >>> import PyQt4
  
None of them should raise an ImportError.
